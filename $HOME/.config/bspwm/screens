#!/bin/bash

cd $(cd "$(dirname "$0")" && pwd)/
source ./helpers

header Screens

xrandr_output="$(xrandr)"

is_connected() {
    local screen="$1"

    echo "${xrandr_output}"|grep -P -qe "^\s*${screen}[-\w]* connected"
    return $?
}

max_monitors() {
    local number=$1
    #for id in $(bspc query -M|tail -n+$((1+${number}))); do
    for id in $(bspc query -M|head -n-${number}); do
        warn Removing monitor ${id}
        bspc monitor ${id} --remove
    done
}

laptopResolution="$(echo "${xrandr_output}"|grep eDP-1 -A 1|grep "*+"|cut -dx -f1|tr -d '[:space:]')"
if [[ ${laptopResolution} -gt 1920 ]]; then
    ok "High resolution screen. Scaling eDP-1 from ${laptopResolution}x to 1920x"
    scale=" --scale-from 1920x1080"
else
    scale=" --auto"
fi

if is_connected DisplayPort-0; then
    ok 'Desktop: 1 screen (ultrawide)'
    max_monitors 1
    #xrandr --output DisplayPort-0 --mode 3840x1600 --pos 0x0 --rate 144.00 --primary
    xrandr --output DisplayPort-0 --auto --pos 0x0 --primary
    bspc wm --reorder-monitors DisplayPort-0
    bspc monitor ^1 --reset-desktops 1 2 3 4 5
elif is_connected eDP && ( is_connected DP-2 || is_connected HDMI-1 ) ; then
    ok 'Laptop: 2 screens (ultrawide)'
    max_monitors 2
    #xrandr -r 60 --dpi 96
    xrandr --output eDP-1 ${scale}

    # One of these two will succeed.
    if xrandr --output DP-2 --mode 3440x1440 --primary --above eDP-1 ; then
        bspc wm --reorder-monitors DP-2 eDP-1
    else
        xrandr --output HDMI-1 --mode 3440x1440 --primary --above eDP-1
        bspc wm --reorder-monitors HDMI-1 eDP-1
    fi
    bspc monitor ^1 --reset-desktops 1 2 3 4
    bspc monitor ^2 --reset-desktops 5
elif is_connected eDP ; then
    ok 'Laptop: 1 screen'
    max_monitors 1
    xrandr \
        --output eDP-1 --auto --pos 0x0 --primary ${scale} \
        --output eDP-1 --auto --pos 0x0 --primary --scale-from 1920x1080
    bspc wm --reorder-monitors eDP-1
    bspc monitor ^1 --reset-desktops 1 2 3 4 5
else
    warn 'Unsupported monitor configuration'
fi

