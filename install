#!/bin/bash
# Logs are in /var/log/spin/dotfiles.log

set -eo pipefail

if [[ -z ${SPIN} ]]; then
    echo 'Must be run within a "Spin" environment' >&2
    exit 1
fi

commandExists() {
    local command=$1
    type "${command}" >/dev/null 2>&1
}

downloadLatestGitHubRelease() {
    [[ $# -eq 2 || $# -eq 3 ]] || { echo "Usage $0 repository destinationFilename [downloadIndex]"; return; };
    local repository=$1 # eg. andornaut/dotfiles
    local destinationPath=$2
    local downloadIndex=${3-1}
    local apiUrl="https://api.github.com/repos/${repository}/releases/latest"
    local url=$(curl -s "${apiUrl}" | grep "browser_download_url" | sed -n -e "${downloadIndex}p"|cut -d '"' -f 4)
    echo "Downloading ${url} to ${destinationPath}"
    if [[ -f ${destinationPath} ]]; then
        echo "${destinationPath} already exists. Skipping..."
        return
    fi
    curl --location --silent -o "${destinationPath}" "${url}"
}

applyGog() {
    if ! commandExists gog; then
        mkdir -p ~/bin
        downloadLatestGitHubRelease andornaut/gog ~/bin/gog 3
        chmod +x ~/bin/*
    fi
    export GOG_DEFAULT_REPOSITORY_NAME=dotfiles
    export GOG_HOME=${HOME}
    export GOG_IGNORE_FILES_REGEX='^install$'
    ~/bin/gog apply
}

installCustomConfigs() {
    # Workaround issue: The application server is started tmux before the dotfiles have been installed
    # n.b. isospin doesn't start tmux by default, so this is n/a
    # This must be run after `applyGog`, so that ~/.tmux.conf exists
    tmux source-file ~/.tmux.conf || true

    # Update the Shopify-managed ~/.gitconfig to include user-specific customizations
    echo -e "[include]\n\tpath = .config/git/config\n$(cat ~/.gitconfig)" >> ~/.gitconfig

    # Spin installs ~/.bash_login, which prevents .profile and .bashrc from being sourced:
    # $BASH_VERSION is unset, which causes .profile to be a no-op, so source .bashrc in .bash_login
    echo 'source ~/.bashrc' >> ~/.bash_login
    cat <<-'EOF' > ~/.bashrc
if [[ $- == *i* ]]; then
    # Only source additional customizations if the shell is interactive
    for f in ~/.bashrc.* ~/.bash_aliases; do
        source ${f}
    done
fi
EOF
}

aptInstall() {
    sudo apt-get install -qq --no-install-recommends tree
}

sudo usermod --shell /bin/bash ${USER}
applyGog
installCustomConfigs
aptInstall
